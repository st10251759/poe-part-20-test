
package com.mycompany.st10251759_poe_p2_test;
//import the joptionpane to project => used for user input and output messages
import javax.swing.JOptionPane;  


 /*   =============Code Attribution====================

    Author: Zahra Bulbulia
    Website: https://github.com/zb662000/prog1stuff/blob/main/MovieQ/src/movieq/Movie.java
    Date of Access: 28 May 2023        
            
    =============Code Attribution====================    */

public class Tasks {//begin Tasks class
    //varaible declaration
    private String taskName; //Name of task
    private int taskNum = 0; //task num is autogenerated and starts from 0
    private String taskDescription; //short description not mre than 50 characters
    private String devDetails; //first and last name of developer
    private int taskDuration; //estimated duration of the the task in hours
    private String taskID; //autogenerated based on a specific criteria
    private String taskStatus; //taskStatus : To do, Doing , Done
    
    private int totalDuration = 0; //varaibel holds total duration of hours
    //constructor method to capture and pass the parameters from main class to the tasks class
    public Tasks(String taskName, String taskDescription, String devDetails, int taskDuration, String taskStatus, int taskNum)
   {//begin constructor
    this.taskName = taskName;
    this.taskDescription = taskDescription;
    this.devDetails = devDetails;
    this.taskDuration = taskDuration;
    this.taskStatus = taskStatus;
    this.taskNum = taskNum;
   
   }//end constructor
//*************************SET METHODS FOR UNIT TESTING****************************************************************
//method to get task description as a parameter
public void setTaskDescription(String taskDescription)
{//begin setTaskDescription
 this.taskDescription = taskDescription;
}//end setTaskDescription

//method gets the taskName as a parameter
public void setTaskName(String taskName)
{//begin setTaskName
    this.taskName = taskName;
}//end setTaskName

//method to get the taskStatus as a parameter
public void setTaskStatus(String taskStatus)
{//begin setTaskStatus
    this.taskStatus = taskStatus;
}//end setTaskStatus

//method to get the developer details as a parameter
public void setDevDetails(String devDetails)
{//begin setDevDetails
    this.devDetails = devDetails;
}//end setDevDetails

//methpd to get the total duration as a parameter
public void setTaskDuration(int taskDuration)
{//begin setTaskDuration
    this.taskDuration = taskDuration;
}//end setTaskDuration

//method to set total Duration to the parameter in the main class
public void setTotalDuration(int taskDuration, int totalDuration)
{//begin
 totalDuration = totalDuration + taskDuration;
 this.totalDuration = totalDuration;
 //returnTotalHours();
}//end


//mthod to increase taskNum
public void increaseTaskNum()
{//begin
    taskNum++;
}//end

//*************************SET METHODS FOR UNIT TESTING****************************************************************
    // Boolean method to check if the taskdescription lenght is valid, a valid lenght is less than or equal 5o characters
public boolean checkTaskDescription()
{//begin checkTaskDescription
 int lengthOfDescription = taskDescription.length(); //get the length of the string stored in taskDescription , i.e. number of characters of the string

 //if statement to check if the length of task descri[tion is less than or equal to 50, will return true
 if(lengthOfDescription<=50)
 {//begin if => true statement
     //Display successful validation message
    //JOptionPane.showMessageDialog(null, "Task successfully captured");
    return true; //assign to true 
 }//end if => true statement
 else 
 {//begin else => false statement => taskDescription greater than 50 characters
     //Display unsuccessful validation message
     //JOptionPane.showMessageDialog(null, "Please enter a task description of less than 50 characters");
     return false; //assign to false
 }//end else => false statement => taskDescription greater than 50 characters
 
}//end checkTaskDescription

//method creates and returns the taskID => based on a specifc set of criteria
public String createTaskID()
{//begin createTaskID
    //Use substring method to get the first 2 characters od taskNameand add the colon e.g. Ab:
    String idTask = taskName.substring(0,2) + ":";
    idTask = idTask + taskNum + ":";//add the task number and a colon o the current string eg. Ad:2:
    idTask = idTask + devDetails.substring((devDetails.length()-3)); // add the last 3 character of develper details to current string e.g. Ab:2:edc
    idTask = idTask.toUpperCase(); //change current string to uppercase
    
    return idTask;
}//end createTaskID

//method to returns all task details
public String printTaskDetails()
{//begin printTaskDetails
   
    String details; //string variable to hold the details of the task 
    details = "Task status: "+ taskStatus + "\nDeveloper details: " + devDetails;
    details = details + "\nTask number: " + taskNum + "\nTask Name: "+taskName+"\nTask description: " +taskDescription;
    details = details + "\nTask ID: "+ createTaskID() + "\nTask duration: " +taskDuration +" hr/s";
    
    return details;
}//end printTaskDetails


//method to add the duration of tasks to the total duration, used in unit testing
public int returnTotalHours()
{//begin addDuration()
    
    return totalDuration;
}//end addDuration()

}//end Tasks Class